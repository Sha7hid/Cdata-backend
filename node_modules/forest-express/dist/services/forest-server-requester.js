"use strict";

var _require = require('@forestadmin/context'),
  inject = _require.inject;
var P = require('bluebird');
var superagent = require('superagent');
var VError = require('verror');
var errorMessages = require('../utils/error-messages');
function perform(route, environmentSecret, queryParameters, headers) {
  var _inject = inject(),
    forestUrl = _inject.forestUrl;
  return new P(function (resolve, reject) {
    var request = superagent.get(forestUrl + route);
    if (environmentSecret) {
      request.set('forest-secret-key', environmentSecret);
    }
    if (headers) {
      request.set(headers);
    }
    if (queryParameters) {
      request.query(queryParameters);
    }
    request.end(function (error, result) {
      if (result) {
        if (result.status === 200 && result.body) {
          return resolve(result.body);
        }
        if (result.status === 0) {
          return reject(new Error(errorMessages.SERVER_TRANSACTION.SERVER_DOWN));
        }
        if (result.status === 404) {
          return reject(new Error(errorMessages.SERVER_TRANSACTION.SECRET_NOT_FOUND));
        }
        if (result.status === 422) {
          return reject(new Error(errorMessages.SERVER_TRANSACTION.SECRET_AND_RENDERINGID_INCONSISTENT));
        }
      }
      if (error) {
        return reject(new VError(error, 'Forest server request error'));
      }
      return reject(new Error(errorMessages.SERVER_TRANSACTION.UNEXPECTED, error));
    });
  });
}
module.exports = {
  perform: perform
};