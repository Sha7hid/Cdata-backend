"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/* eslint-disable max-classes-per-file */
var Unauthorized = /*#__PURE__*/function (_Error) {
  (0, _inherits2["default"])(Unauthorized, _Error);
  var _super = _createSuper(Unauthorized);
  function Unauthorized(message) {
    var _this;
    (0, _classCallCheck2["default"])(this, Unauthorized);
    _this = _super.call(this, message);
    _this.name = 'Unauthorized';
    _this.status = 401;
    _this.message = message;
    return _this;
  }
  return (0, _createClass2["default"])(Unauthorized);
}( /*#__PURE__*/(0, _wrapNativeSuper2["default"])(Error));
var UnprocessableEntity = /*#__PURE__*/function (_Error2) {
  (0, _inherits2["default"])(UnprocessableEntity, _Error2);
  var _super2 = _createSuper(UnprocessableEntity);
  function UnprocessableEntity(message) {
    var _this2;
    (0, _classCallCheck2["default"])(this, UnprocessableEntity);
    _this2 = _super2.call(this, message);
    _this2.name = 'UnprocessableEntity';
    _this2.status = 422;
    _this2.message = message;
    return _this2;
  }
  return (0, _createClass2["default"])(UnprocessableEntity);
}( /*#__PURE__*/(0, _wrapNativeSuper2["default"])(Error));
var InvalidFiltersFormat = /*#__PURE__*/function (_Error3) {
  (0, _inherits2["default"])(InvalidFiltersFormat, _Error3);
  var _super3 = _createSuper(InvalidFiltersFormat);
  function InvalidFiltersFormat(message) {
    var _this3;
    (0, _classCallCheck2["default"])(this, InvalidFiltersFormat);
    _this3 = _super3.call(this, message);
    _this3.name = 'InvalidFiltersFormat';
    _this3.message = message || 'The filters format is not a valid JSON string.';
    _this3.status = 422;
    return _this3;
  }
  return (0, _createClass2["default"])(InvalidFiltersFormat);
}( /*#__PURE__*/(0, _wrapNativeSuper2["default"])(Error));
var NoMatchingOperatorError = /*#__PURE__*/function (_Error4) {
  (0, _inherits2["default"])(NoMatchingOperatorError, _Error4);
  var _super4 = _createSuper(NoMatchingOperatorError);
  function NoMatchingOperatorError(message) {
    var _this4;
    (0, _classCallCheck2["default"])(this, NoMatchingOperatorError);
    _this4 = _super4.call(this, message);
    _this4.name = 'NoMatchingOperatorError';
    _this4.message = message || 'The given operator is not handled.';
    _this4.status = 422;
    return _this4;
  }
  return (0, _createClass2["default"])(NoMatchingOperatorError);
}( /*#__PURE__*/(0, _wrapNativeSuper2["default"])(Error));
module.exports = {
  Unauthorized: Unauthorized,
  UnprocessableEntity: UnprocessableEntity,
  InvalidFiltersFormat: InvalidFiltersFormat,
  NoMatchingOperatorError: NoMatchingOperatorError
};